-- Player Detector with Improved Professional Design
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

local localPlayer = Players.LocalPlayer
local gui = nil
local mainFrame = nil
local contentFrame = nil
local headerFrame = nil
local isMinimized = false
local updateConnection = nil
local lastUpdate = 0
local playerDataCache = {}

local config = {
    guiSize = UDim2.new(0, 320, 0, 400),
    minSize = UDim2.new(0, 320, 0, 45),
    position = UDim2.new(0, 50, 0, 100),
    updateRate = 2,
    playerEntryHeight = 65,
    maxDetectionRange = math.huge
}

-- Warna lebih profesional dan modern
local colors = {
    bg = Color3.fromRGB(18, 18, 22),
    surface = Color3.fromRGB(26, 26, 32),
    surfaceHover = Color3.fromRGB(35, 35, 42),
    primary = Color3.fromRGB(99, 102, 241),
    primaryHover = Color3.fromRGB(79, 82, 221),
    success = Color3.fromRGB(34, 197, 94),
    danger = Color3.fromRGB(239, 68, 68),
    warning = Color3.fromRGB(251, 191, 36),
    text = Color3.fromRGB(250, 250, 250),
    textMuted = Color3.fromRGB(161, 161, 170),
    border = Color3.fromRGB(39, 39, 42)
}

local function round(num)
    return math.floor(num + 0.5)
end

local function formatPosition(pos)
    if pos then
        return string.format("%d, %d, %d", round(pos.X), round(pos.Y), round(pos.Z))
    end
    return "Unknown"
end

local function getCharacterPosition(player)
    if player and player.Parent and player.Character and player.Character.Parent then
        local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            return rootPart.Position
        end
    end
    return nil
end

local function getDistance(pos1, pos2)
    if pos1 and pos2 then
        return round((pos1 - pos2).Magnitude)
    end
    return 0
end

local function teleportToPlayer(targetPlayer)
    local success = pcall(function()
        local localChar = localPlayer.Character
        local targetChar = targetPlayer.Character
        
        if not localChar or not localChar:FindFirstChild("HumanoidRootPart") then
            return false
        end
        
        if not targetChar or not targetChar.Parent or not targetChar:FindFirstChild("HumanoidRootPart") then
            return false
        end
        
        local targetHumanoid = targetChar:FindFirstChild("Humanoid")
        if not targetHumanoid or targetHumanoid.Health <= 0 then
            return false
        end
        
        local targetCFrame = targetChar.HumanoidRootPart.CFrame
        localChar.HumanoidRootPart.CFrame = targetCFrame + Vector3.new(0, 3, 0)
        
        return true
    end)
    
    return success
end

local function createButton(parent, size, position, config)
    local button = Instance.new("TextButton")
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = config.bg or colors.surface
    button.Text = config.text or ""
    button.TextColor3 = config.textColor or colors.text
    button.Font = Enum.Font.GothamMedium
    button.TextSize = config.textSize or 12
    button.BorderSizePixel = 0
    button.AutoButtonColor = false
    button.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button
    
    if config.onClick then
        button.MouseButton1Click:Connect(config.onClick)
    end
    
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.15), {
            BackgroundColor3 = config.hoverBg or colors.surfaceHover
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.15), {
            BackgroundColor3 = config.bg or colors.surface
        }):Play()
    end)
    
    return button
end

local function updatePlayerDataCache()
    local localPos = getCharacterPosition(localPlayer)
    playerDataCache = {}
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Parent then
            local pos = getCharacterPosition(player)
            
            if pos then
                local distance = getDistance(localPos, pos)
                
                playerDataCache[player.UserId] = {
                    player = player,
                    distance = distance,
                    position = pos,
                    hasCharacter = true
                }
            end
        end
    end
end

local function updatePlayerList()
    if not contentFrame or not contentFrame.Parent then return end
    
    updatePlayerDataCache()
    
    for _, child in pairs(contentFrame:GetChildren()) do
        if child:IsA("GuiObject") then
            child:Destroy()
        end
    end
    
    local playerList = {}
    for _, data in pairs(playerDataCache) do
        table.insert(playerList, data)
    end
    
    table.sort(playerList, function(a, b)
        return a.distance < b.distance
    end)
    
    for i, data in pairs(playerList) do
        local yPos = (i - 1) * config.playerEntryHeight + 8
        
        local container = Instance.new("TextButton")
        container.Name = "PlayerEntry" .. i
        container.Size = UDim2.new(1, -16, 0, config.playerEntryHeight - 8)
        container.Position = UDim2.new(0, 8, 0, yPos)
        container.BackgroundColor3 = colors.surface
        container.BorderSizePixel = 0
        container.Text = ""
        container.AutoButtonColor = false
        container.Parent = contentFrame
        
        container.MouseButton1Click:Connect(function()
            local success = teleportToPlayer(data.player)
            
            TweenService:Create(container, TweenInfo.new(0.1), {
                BackgroundColor3 = success and colors.success or colors.danger
            }):Play()
            
            wait(0.3)
            TweenService:Create(container, TweenInfo.new(0.2), {
                BackgroundColor3 = colors.surface
            }):Play()
        end)
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 10)
        corner.Parent = container
        
        local stroke = Instance.new("UIStroke")
        stroke.Color = colors.border
        stroke.Thickness = 1
        stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        stroke.Parent = container
        
        -- Avatar
        local avatar = Instance.new("ImageLabel")
        avatar.Size = UDim2.new(0, 40, 0, 40)
        avatar.Position = UDim2.new(0, 10, 0, 8)
        avatar.BackgroundTransparency = 1
        avatar.Image = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. data.player.UserId .. "&width=48&height=48&format=png"
        avatar.Parent = container
        
        local avatarCorner = Instance.new("UICorner")
        avatarCorner.CornerRadius = UDim.new(0, 8)
        avatarCorner.Parent = avatar
        
        -- Status indicator
        local statusDot = Instance.new("Frame")
        statusDot.Size = UDim2.new(0, 10, 0, 10)
        statusDot.Position = UDim2.new(0, 42, 0, 8)
        statusDot.BackgroundColor3 = colors.success
        statusDot.BorderSizePixel = 0
        statusDot.ZIndex = 2
        statusDot.Parent = container
        
        local dotCorner = Instance.new("UICorner")
        dotCorner.CornerRadius = UDim.new(1, 0)
        dotCorner.Parent = statusDot
        
        local dotStroke = Instance.new("UIStroke")
        dotStroke.Color = colors.surface
        dotStroke.Thickness = 2
        dotStroke.Parent = statusDot
        
        -- Name
        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(0, 180, 0, 20)
        nameLabel.Position = UDim2.new(0, 58, 0, 8)
        nameLabel.BackgroundTransparency = 1
        nameLabel.Text = data.player.Name
        nameLabel.TextColor3 = colors.text
        nameLabel.Font = Enum.Font.GothamSemibold
        nameLabel.TextSize = 13
        nameLabel.TextXAlignment = Enum.TextXAlignment.Left
        nameLabel.TextTruncate = Enum.TextTruncate.AtEnd
        nameLabel.Parent = container
        
        -- Distance badge
        local distanceText = data.distance .. "m"
        local distColor = colors.success
        
        if data.distance > 100 then
            distColor = colors.warning  
        end
        if data.distance > 1000 then
            distColor = colors.danger
        end
        
        local distBadge = Instance.new("Frame")
        distBadge.Size = UDim2.new(0, 60, 0, 20)
        distBadge.Position = UDim2.new(1, -70, 0, 8)
        distBadge.BackgroundColor3 = distColor
        distBadge.BorderSizePixel = 0
        distBadge.Parent = container
        
        local badgeCorner = Instance.new("UICorner")
        badgeCorner.CornerRadius = UDim.new(0, 6)
        badgeCorner.Parent = distBadge
        
        local distLabel = Instance.new("TextLabel")
        distLabel.Size = UDim2.new(1, 0, 1, 0)
        distLabel.BackgroundTransparency = 1
        distLabel.Text = distanceText
        distLabel.TextColor3 = colors.bg
        distLabel.Font = Enum.Font.GothamBold
        distLabel.TextSize = 11
        distLabel.Parent = distBadge
        
        -- Coordinates
        local coordLabel = Instance.new("TextLabel")
        coordLabel.Size = UDim2.new(0, 180, 0, 16)
        coordLabel.Position = UDim2.new(0, 58, 0, 30)
        coordLabel.BackgroundTransparency = 1
        coordLabel.Text = formatPosition(data.position)
        coordLabel.TextColor3 = colors.textMuted
        coordLabel.Font = Enum.Font.GothamMedium
        coordLabel.TextSize = 10
        coordLabel.TextXAlignment = Enum.TextXAlignment.Left
        coordLabel.Parent = container
        
        container.MouseEnter:Connect(function()
            TweenService:Create(container, TweenInfo.new(0.15), {
                BackgroundColor3 = colors.surfaceHover
            }):Play()
            TweenService:Create(stroke, TweenInfo.new(0.15), {
                Color = colors.primary
            }):Play()
        end)
        
        container.MouseLeave:Connect(function()
            TweenService:Create(container, TweenInfo.new(0.15), {
                BackgroundColor3 = colors.surface
            }):Play()
            TweenService:Create(stroke, TweenInfo.new(0.15), {
                Color = colors.border
            }):Play()
        end)
    end
    
    contentFrame.CanvasSize = UDim2.new(0, 0, 0, #playerList * config.playerEntryHeight + 16)
    
    if headerFrame and headerFrame:FindFirstChild("CountLabel") then
        headerFrame.CountLabel.Text = #playerList .. " Players"
    end
end

local function toggleMinimize()
    isMinimized = not isMinimized
    
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
    
    if isMinimized then
        TweenService:Create(mainFrame, tweenInfo, {Size = config.minSize}):Play()
        contentFrame.Visible = false
    else
        TweenService:Create(mainFrame, tweenInfo, {Size = config.guiSize}):Play()
        wait(0.2)
        contentFrame.Visible = true
        updatePlayerList()
    end
    
    local minBtn = headerFrame:FindFirstChild("MinButton")
    if minBtn then
        minBtn.Text = isMinimized and "+" or "–"
    end
end

local function closeGUI()
    if updateConnection then
        updateConnection:Disconnect()
    end
    
    if gui then
        gui:Destroy()
    end
    
    gui = nil
    playerDataCache = {}
end

local function createGUI()
    if gui then gui:Destroy() end
    
    gui = Instance.new("ScreenGui")
    gui.Name = "PlayerDetector"
    gui.Parent = CoreGui
    gui.ResetOnSpawn = false
    gui.IgnoreGuiInset = true
    
    mainFrame = Instance.new("Frame")
    mainFrame.Size = config.guiSize
    mainFrame.Position = config.position
    mainFrame.BackgroundColor3 = colors.bg
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Parent = gui
    
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 12)
    mainCorner.Parent = mainFrame
    
    local mainStroke = Instance.new("UIStroke")
    mainStroke.Color = colors.border
    mainStroke.Thickness = 1
    mainStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    mainStroke.Parent = mainFrame
    
    -- Header
    headerFrame = Instance.new("Frame")
    headerFrame.Size = UDim2.new(1, 0, 0, 45)
    headerFrame.Position = UDim2.new(0, 0, 0, 0)
    headerFrame.BackgroundTransparency = 1
    headerFrame.BorderSizePixel = 0
    headerFrame.Parent = mainFrame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(0, 150, 1, 0)
    titleLabel.Position = UDim2.new(0, 16, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "Players"
    titleLabel.TextColor3 = colors.text
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 15
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = headerFrame
    
    local countLabel = Instance.new("TextLabel")
    countLabel.Name = "CountLabel"
    countLabel.Size = UDim2.new(0, 80, 1, 0)
    countLabel.Position = UDim2.new(0, 166, 0, 0)
    countLabel.BackgroundTransparency = 1
    countLabel.Text = "0 Players"
    countLabel.TextColor3 = colors.textMuted
    countLabel.Font = Enum.Font.GothamMedium
    countLabel.TextSize = 11
    countLabel.TextXAlignment = Enum.TextXAlignment.Left
    countLabel.Parent = headerFrame
    
    local refreshBtn = createButton(headerFrame, UDim2.new(0, 28, 0, 28), UDim2.new(1, -98, 0.5, -14), {
        text = "↻",
        textSize = 14,
        bg = colors.surface,
        hoverBg = colors.primary,
        onClick = function()
            updatePlayerList()
        end
    })
    
    local minBtn = createButton(headerFrame, UDim2.new(0, 28, 0, 28), UDim2.new(1, -64, 0.5, -14), {
        text = "–",
        textSize = 16,
        bg = colors.surface,
        hoverBg = colors.warning,
        onClick = toggleMinimize
    })
    minBtn.Name = "MinButton"
    
    local closeBtn = createButton(headerFrame, UDim2.new(0, 28, 0, 28), UDim2.new(1, -30, 0.5, -14), {
        text = "×",
        textSize = 18,
        bg = colors.surface,
        hoverBg = colors.danger,
        onClick = closeGUI
    })
    
    -- Divider
    local divider = Instance.new("Frame")
    divider.Size = UDim2.new(1, -32, 0, 1)
    divider.Position = UDim2.new(0, 16, 0, 45)
    divider.BackgroundColor3 = colors.border
    divider.BorderSizePixel = 0
    divider.Parent = mainFrame
    
    contentFrame = Instance.new("ScrollingFrame")
    contentFrame.Size = UDim2.new(1, 0, 1, -46)
    contentFrame.Position = UDim2.new(0, 0, 0, 46)
    contentFrame.BackgroundTransparency = 1
    contentFrame.BorderSizePixel = 0
    contentFrame.ScrollBarThickness = 4
    contentFrame.ScrollBarImageColor3 = colors.border
    contentFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    contentFrame.Parent = mainFrame
end

local function startDetector()
    createGUI()
    
    wait(1)
    updatePlayerList()
    
    updateConnection = RunService.Heartbeat:Connect(function()
        if tick() - lastUpdate >= config.updateRate then
            if gui and mainFrame and mainFrame.Parent and not isMinimized then
                updatePlayerList()
            end
            lastUpdate = tick()
        end
    end)
end

Players.PlayerAdded:Connect(function(player)
    wait(2)
    if gui and not isMinimized then
        updatePlayerList()
    end
end)

Players.PlayerRemoving:Connect(function(player)
    playerDataCache[player.UserId] = nil
    if gui and not isMinimized then
        updatePlayerList()
    end
end)

_G.PlayerDetector = {
    start = startDetector,
    stop = closeGUI,
    refresh = updatePlayerList,
    minimize = toggleMinimize,
    teleportTo = teleportToPlayer
}

startDetector()
